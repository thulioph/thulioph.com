{"componentChunkName":"component---src-templates-blog-post-js","path":"/writings/pt/rubber-duck-debugging","result":{"data":{"markdownRemark":{"html":"<p>Conheci este termo através de um vídeo do <a href=\"https://twitter.com/rafaellyra\">@rafaellyra</a> para o <a href=\"https://www.youtube.com/user/DevCastVideos\">DevCast</a> falando sobre o <a href=\"http://gruntjs.com/\">GruntJS</a> e logo nos primeiros slides ele tocou num termo chamado <strong>Rubber Duck Debbuging</strong>. </p>\n<h2>O que é?</h2>\n<p>É uma maneira de você debugar seu código e achar erros, mas como funciona? São 19:00 da noite e você está tentando solucionar um erro no seu código desde ás 14:00 da tarde e não encontra de forma alguma, daí chama algum colega de trabalho e pede ajuda a ele..</p>\n<p>Ele pergunta como você está fazendo e você começa a explicar o que está querendo fazer e o que está fazendo, até que através da sua explicação você consegue achar o erro sem a ajuda do cara.\n\\o/ \\o/ \\o/ \\o/</p>\n<p>Parece engraçado mas muitos irão se reconhecer, e foi aí que surgiu o <a href=\"http://www.rubberduckdebugging.com/\">Rubber Duck Debbuging</a>.</p>\n<h2>Etapas</h2>\n<h3>primeiro</h3>\n<p>Pegue emprestado, roube, compre, fabrique e obtenha de qualquer forma um pato de borracha;</p>\n<h3>segundo</h3>\n<p>Ponha o pato de borracha na sua mesa e informe-o que está trabalhando e que irá mostrar alguns códigos para ele;</p>\n<h3>terceiro</h3>\n<p>Explique para o pato o que você quer fazer com seu código e entre em detalhes, explique a ele o código linha por linha;</p>\n<h3>e então...</h3>\n<p>Em algum momento você vai dizer ao pato o que está fazendo e vai perceber que de fato você não está fazendo e aí que estará o erro. O pato irá continuar sentado e feliz em saber que está ajudando você;</p>\n<blockquote>\n<p>Caso não tenha um pato, um colega de trabalho pode ser capaz de substitui-lo, porém alguns muitas vezes preferem contar os erros a um pato do que a um colega de trabalho.</p>\n</blockquote>\n<hr>\n<p>E você já conhecia ou já praticou esta “técnica”? Conte nos comentários :D</p>","frontmatter":{"date":"December 03, 2013","path":"/writings/pt/rubber-duck-debugging","title":"Rubber Duck Debugging","imageSlug":""},"fields":{"readingTime":{"text":"2 min read"}}}},"pageContext":{"pathSlug":"/writings/pt/rubber-duck-debugging","next":{"frontmatter":{"path":"/writings/pt/porque-programadores-gostam-de-programar","title":"Porque programadores gostam de programar?"}},"prev":{"frontmatter":{"path":"/writings/pt/sublime-text-plugins","title":"Sublime Text Plugins"}}}}}