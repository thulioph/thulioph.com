{"componentChunkName":"component---src-templates-blog-post-js","path":"/writings/pt/i18next-para-internacionalizacao","result":{"data":{"markdownRemark":{"html":"<p>Eu nunca me importei até que em um belo dia, um cliente teve essa necessidade e foi aí que precisei pensar, pesquisar e aprender sobre internacionalização.\nParticipei de um projeto para a copa do mundo e o conteúdo deveria ser suportado por no mínimo 3 linguas diferentes: o inglês, espanhol e o português.\nMas eu nunca tinha feito nada multilinguagem e nesse momento quase bateu o desespero.\nAcho que a pior dificuldade foi de me expressar, porque até então eu não tinha noção de que o termo <strong>internacionalização</strong> seria a palavra chave pra isso tudo.</p>\n<p>Os primeiros questionamentos que eu me fiz foram:</p>\n<ol>\n<li>“Vou ter que fazer 3 sites diferentes?”</li>\n<li>“Vou ter mais trabalho que o normal?”</li>\n<li>“Como eu vou pesquisar sobre alguma lib que me ajude com isso? Será que existe?”</li>\n</ol>\n<p>Antes de ir adiante, vamos ver o significado da coisa segundo o dicionário: </p>\n<blockquote>\n<p>Tornar-se internacional; Espalhar ou difundir por vários países.</p>\n</blockquote>\n<p>Depois de toda essa introdução, finalmente apresento a vocês o maestro da orquestraque pode ser a solução para os seus problemas: O <a href=\"https://www.i18next.com/\">i18next</a>!</p>\n<p>Algumas considerações sobre esta lib:$$</p>\n<ul>\n<li>Seu suporte não é só para JavaScript.</li>\n<li>Possui integração com o jQuery.</li>\n<li>Todo seu conteúdo textual é inserido em um JSON.</li>\n<li>Documentação completa, fácil e direta.</li>\n<li>Você pode traduzir todo e qualquer texto do seu projeto, seja ele um <code class=\"language-text\">title</code>, <code class=\"language-text\">alt</code>, ou de qualquer outro atributo.</li>\n<li>Você pode detectar a linguagem do usuário e inserir o conteúdo de acordo com seu idioma.</li>\n<li>Ativar a internacionalização no clique.</li>\n</ul>\n<p>Vou descrever os passos para você conseguir chegar <a href=\"https://thulioph.github.io/i18next-internacionalizacao/\">neste resultado</a> que será acessível para <strong>espanhol</strong>, <strong>inglês</strong> e <strong>português</strong>.</p>\n<h2>Como iniciar?</h2>\n<h3>Estrutura Básica</h3>\n<p>As traduções do conteúdo deverão ser subpastas da pasta <strong>locales</strong> e precisam conter um arquivo <code class=\"language-text\">translation.json</code> com o json das traduções.\nEntão para o nosso exemplo a estrutura fica desta forma:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">|_locales\n|_locales/en-US\n|_locales/en-US/translations.json\n|_locales/es\n|_locales/es/translations.json\n|_locales/pt-BR\n|_locales/pt-BR/translations.json</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h4>Configurações básicas</h4>\n<p>Para o texto da tradução ser inserido no local desejado você deve utilizar o atributo <code class=\"language-text\">data-i18n</code> que permite vários valores, passando o objeto com chave e valor.\nCaso o conteúdo traduzido seja um atributo, seu nome deverá ser inserido dentro de colchetes <code class=\"language-text\">[]</code> seguido de sua posição no <code class=\"language-text\">JSON</code>.\nAlgo assim:</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-html line-numbers\"><code class=\"language-html\">  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>#<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">data-i18n</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>link.general;[title]attr.linkGeneral<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<p>O HTML fica sem nenhum conteúdo textual, pois todo conteúdo será inserido de acordo com a linguagem de forma dinâmica.\nSeguindo os passos para o HTML, você agora está pronto para o JavaScript, onde é preciso setar algumas configurações de inicialização.\nAlgo como:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-javascript line-numbers\"><code class=\"language-javascript\">  i18n<span class=\"token punctuation\">.</span><span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    fallbackLng<span class=\"token operator\">:</span> <span class=\"token string\">'en-US'</span>\n    <span class=\"token punctuation\">,</span>debug<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span>\n    <span class=\"token punctuation\">,</span>fixLng<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span>\n    <span class=\"token punctuation\">,</span>load<span class=\"token operator\">:</span> <span class=\"token string\">'current'</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n  <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">translation</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">'[data-i18n]'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">i18n</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">var</span> appName <span class=\"token operator\">=</span> <span class=\"token function\">translation</span><span class=\"token punctuation\">(</span><span class=\"token string\">'app.name'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h4>Configuração detalhada</h4>\n<ul>\n<li>fallbackLng: fallback para quando não for definida ou não for localizada a linguagem do usuário.</li>\n<li>debug: debug da lib, habilitando no console algumas informações que podem ser úteis para desenvolvimento.</li>\n<li>fixLng: preserva o cookie da linguagem setada pelo usuário para quando o mesmo for acessar novamente.</li>\n<li>load: faz o request apenas para a linguagem definida.</li>\n<li>$(‘[data-i18n]’).i18n(): todos os atributos data-i18n recebem a tradução.</li>\n</ul>\n<h4>Explicando</h4>\n<p>Por padrão a lib detecta a linguagem do navegador e insere o conteúdo de acordo, caso o idioma detectado não possua tradução, o que for definido em <code class=\"language-text\">fallbackLng</code> será o conteúdo inserido.</p>\n<p>Se o idioma for definido a partir de um clique ou qualquer outra interação você seta uma nova linguagem, preserva o cookie e inicia a tradução:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-javascript line-numbers\"><code class=\"language-javascript\">  <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">'elemento'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    i18n<span class=\"token punctuation\">.</span><span class=\"token function\">setLng</span><span class=\"token punctuation\">(</span><span class=\"token string\">'es'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>fixLng<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">translation</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n      <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">'[data-i18n]'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">i18n</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>A lib é realmente bastante simples, não tem muito o que se fazer, seguindo os passos descritos, você consegue deixar seu conteúdo mais acessível e em vários idiomas.\n<a href=\"https://github.com/thulioph/i18next-internacionalizacao/\">Aqui</a> você encontra o repositório com o exemplo que foi mostrado e todo o código comentado.</p>\n<h2>Referências</h2>\n<ul>\n<li><a href=\"https://www.i18next.com/\">https://www.i18next.com/</a></li>\n<li>Photo by <a href=\"https://unsplash.com/@kaung_myat_min?utm_source=unsplash&#x26;utm_medium=referral&#x26;utm_content=creditCopyText\">Kaung Myat Min</a> on <a href=\"https://unsplash.com/s/photos/international?utm_source=unsplash&#x26;utm_medium=referral&#x26;utm_content=creditCopyText\">Unsplash</a></li>\n</ul>\n<hr>\n<p>Qualquer dúvida, crítica ou sugestão você pode deixar nos comentários ou entrar em contato comigo 🙂</p>","frontmatter":{"date":"October 20, 2014","path":"/writings/pt/i18next-para-internacionalizacao","title":"i18next para Internacionalização","imageSlug":"posts/i18next.jpg"},"fields":{"readingTime":{"text":"4 min read"}}}},"pageContext":{"pathSlug":"/writings/pt/i18next-para-internacionalizacao","prev":{"frontmatter":{"path":"/writings/pt/feec-lite","title":"Feec Lite"}},"next":{"frontmatter":{"path":"/writings/pt/front-in-aracaju","title":"Front In Aracaju"}}}}}